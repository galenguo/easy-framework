<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 服务组件配置 -->
    <import resource="classpath*:/META-INF/efun-core-service.xml" />
    
    <!-- 路由数据源，支持多读多写，但是实际开发上建议，单写多读；如果不同读写库存在业务隔离了性，编码的时候要考虑事务不能夸库。 -->
    <bean id="readDataSources" class="com.efun.core.db.support.DataSourceWapper">
        <property name="dataSources">
            <list>
                <ref bean="readDataSource"/>
            </list>
        </property>
    </bean>

    <bean id="writeDataSources" class="com.efun.core.db.support.DataSourceWapper">
        <property name="dataSources">
            <list>
                <ref bean="writeDataSource"/>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.efun.core.db.support.RoutingDataSource">
        <property name="targetDataSources">
            <map key-type="com.efun.core.db.annotation.DSType">
                <entry key="WRITE" value-ref="writeDataSources"/>
                <entry key="READ" value-ref="readDataSources"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="readDataSources"/>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="com.efun.core.mapper.support.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
        <!-- mybatis配置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="com.efun.core.mapper.support.MapperScannerConfigurer">
        <property name="basePackage" value="com.efun.archetype.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="genericMappers">
            <array>
                <value>com.efun.core.mapper.BaseMapper</value>
            </array>
        </property>
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 激活自动代理功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 配置数据库注解aop -->
    <bean id="dataSourceInterceptor" class="com.efun.core.db.support.DataSourceInterceptor" />
    <aop:config>
        <aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor" order="0">
            <aop:pointcut id="pointCut" expression="execution(* com.efun..*.service..*.*(..))"/>
            <aop:around pointcut-ref="pointCut" method="invoke"/>
        </aop:aspect>
    </aop:config>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="useCodeAsDefaultMessage" value="true" />
        <property name="cacheSeconds" value="10"></property>
        <property name="defaultEncoding" value="utf-8" />
        <property name="basenames">
            <list>
                <!--必须使用classpath，不支持classpath*-->
                <value>classpath:${efunPlatformRegion}/i18n/validation</value>
                <value>classpath:${efunPlatformRegion}/i18n/messages-efun-web</value>
            </list>
        </property>
    </bean>

    <!-- 异步处理框架 组件 -->
    <bean id="eventPublisher" class="com.efun.core.asyn.EventPublisher" />

    <!--占用cpu资源过高，需要优化-->
    <!--<bean id="eventProcessor" class="com.efun.core.asyn.EventProcessor">
        <property name="publisher" ref="eventPublisher"/>
        <property name="threadCount" value="#{T(com.efun.core.config.Configuration).getProperty('asyn.thred.count')}"/>
        <property name="eventHandlers">
            <list>
                &lt;!&ndash; 异步处理handler注册 &ndash;&gt;
                <bean class="com.efun.archetype.asyn.UserEventHandler"/>
            </list>
        </property>
    </bean>-->


</beans>