<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 加载系统运行环境依赖的配置，例如：系统设置的变量、数据源等等 -->

    <!-- 导入配置 -->
    <bean id="propertyPlaceholderConfigurer" class="com.efun.core.config.PropertyConfigurationLoader">
        <property name="intervalSeconds" value="30"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="baseLocation" value="classpath:${efunPlatformRegion}/*.properties"/>
    </bean>

    <!-- 配置管理 -->
    <context:component-scan base-package="com.efun.core.config"/>

    <!-- 数据源配置 -->
    <bean id="readDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${datasource.read.driver}"/>
        <property name="url" value="${datasource.read.url}" />
        <property name="username" value="${datasource.read.username}" />
        <property name="password" value="${datasource.read.password}" />
    </bean>

    <bean id="writeDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${datasource.write.driver}"/>
        <property name="url" value="${datasource.write.url}" />
        <property name="username" value="${datasource.write.username}" />
        <property name="password" value="${datasource.write.password}" />
    </bean>

    <!--reids数据源配置-->
    <!--<bean class="com.efun.core.cache.redis.RedisClusterPoolManager">
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
        <property name="timeout" value="${redis.timeout}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <property name="serverNames" value="${redis.serverNames}"/>
        <property name="sentinels" value="${redis.sentinels}"/>
    </bean>-->

</beans>